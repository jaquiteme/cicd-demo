name: todo-app-front CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
# Global variables for this action
env:
  REGISTRY: "hub.docker.com"
  APP_NAME: "todo-app-front"
  GITHUB_SHA: "${{ github.sha }}"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Checks-out jaquiteme/todo-app-front repo
      - uses: actions/checkout@v3
        with: 
          repository: "jaquiteme/${{ env.APP_NAME }}"
          path: ${{ env.APP_NAME }}
          
      # This step is used to set an image tag variable    
      - name: Get container image tag
        id: "get-container-image"
        # GITHUB_OUTPUT is used to get output as key/value pair
        run: echo "image_tag=${GITHUB_SHA::6}" >> "$GITHUB_OUTPUT"
          
      # This step build the container image
      - name: Build container image
        uses: redhat-actions/buildah-build@v2
        with:
          image: "${{ secrets.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}"
          tags: "${{ steps.get-container-image.outputs.image_tag }}"
          containerfiles: |
            ./Dockerfile
      # This step push the container image to a the defined registry
      - name: "Push to the container registry : ${{ env.REGISTRY }}"
        id: "push-to-registry"
        uses: redhat-actions/push-to-registry@v2
        with:
          image: "${{ steps.build-image.outputs.image }}"
          tags: "${{ steps.build-image.outputs.tags }}"
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
